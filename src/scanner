class LookAhead:
    """ One item buffer for reading an item-position sequence """

    def __init__(self, seq):
        self.iter = iter(seq)
        self.pos = None
        self.done = False
        self._advance()

    def _advance(self):
        try:
            self.item, self.pos = next(self.iter)
            #if DEBUG:
            #    print(f"{self.pos}: read '{self.item}'")
        except StopIteration:
            self.done = True

    def peek(self):
        """ return current item """

        assert not self.done
        return self.item

    def get(self):
        """ return current item and advance to next """

        assert not self.done
        item = self.item
        self._advance()
        return item